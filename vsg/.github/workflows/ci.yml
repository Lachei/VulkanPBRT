name: CI
on:
  push:
  pull_request:
env:
  VulkanSDKVersion: 1.2.162.1
  CMakeVersion: 3.10.x
jobs:
  linux-build:
    runs-on: ubuntu-latest
    env:
      BuildDocEnabled: ${{github.event_name == 'push' && github.ref == 'refs/heads/master'}}
      VULKAN_SDK: $GITHUB_WORKSPACE/../$VulkanSDKVersion/x86_64
    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: ${{env.CMakeVersion}}
    - uses: actions/checkout@v2
    - name: Cache
      id: cache
      uses: actions/cache@v1.1.2
      with:
        path: ${{env.VULKAN_SDK}}
        key: VulkanSdk${{env.VulkanSDKVersion}}ExtractedLinux
    - name: Download & Extract Vulkan SDK
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        wget --no-cookies -O ../vulkansdk-linux-x86_64-${{env.VulkanSDKVersion}}.tar.gz https://sdk.lunarg.com/sdk/download/${{env.VulkanSDKVersion}}/linux/vulkansdk-linux-x86_64-${{env.VulkanSDKVersion}}.tar.gz?u=
        tar -zxf ../vulkansdk-linux-x86_64-${{env.VulkanSDKVersion}}.tar.gz -C ../
    - name: Install Doxygen
      if: env.BuildDocEnabled == 'true'
      run: sudo apt install doxygen graphviz
    - name: CMake
      run: |
        cmake -D Vulkan_INCLUDE_DIR="${{env.VULKAN_SDK}}/include" \
          -D Vulkan_LIBRARY="${{env.VULKAN_SDK}}/lib/libvulkan.so" .
    - run: make -j 2 
    - if: env.BuildDocEnabled == 'true'
      run: make docs
    - name: Publish doc
      if: env.BuildDocEnabled == 'true'
      uses: actions/upload-artifact@v1
      with:
        name: VSG Documentation
        path: html
    - name: Install
      run: sudo make install

  windows-build:
    runs-on: windows-2016
    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: ${{env.CMakeVersion}}
    - uses: actions/checkout@v2
    - name: Set env
      id: env
      run: echo "::set-output name=VULKAN_SDK::C:\VulkanSDK\${{env.VulkanSDKVersion}}"
    - name: Cache
      id: cache
      uses: actions/cache@v1.1.2
      with:
        path: ${{steps.env.outputs.VULKAN_SDK}}
        key: VulkanSdk${{env.VulkanSDKVersion}}WindowsExtracted2
    - name: Download & Install Vulkan SDK
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/${{env.VulkanSDKVersion}}/windows/VulkanSDK-${{env.VulkanSDKVersion}}-Installer.exe?u= -OutFile ../vulkan-sdk-${{env.VulkanSDKVersion}}.exe
        $installer = Start-Process -FilePath ../vulkan-sdk-${{env.VulkanSDKVersion}}.exe -Wait -PassThru -ArgumentList @("/S");
        $installer.WaitForExit();
    - name: CMake
      run: cmake . -G "Visual Studio 15 2017" -A x64
      env:
        VULKAN_SDK: ${{steps.env.outputs.VULKAN_SDK}}
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: MSBuild Compile
      run: MSBuild.exe ALL_BUILD.vcxproj -p:Configuration=Release
    - name: MSBuild Install
      run: MSBuild.exe INSTALL.vcxproj -p:Configuration=Release

  windows-dll-build:
    runs-on: windows-2016
    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: ${{env.CMakeVersion}}
    - uses: actions/checkout@v2
    - name: Set env
      id: env
      run: echo "::set-output name=VULKAN_SDK::C:\VulkanSDK\${{env.VulkanSDKVersion}}"
    - name: Cache
      id: cache
      uses: actions/cache@v1.1.2
      with:
        path: ${{steps.env.outputs.VULKAN_SDK}}
        key: VulkanSdk${{env.VulkanSDKVersion}}WindowsExtracted2
    - name: Download & Install Vulkan SDK
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/${{env.VulkanSDKVersion}}/windows/VulkanSDK-${{env.VulkanSDKVersion}}-Installer.exe?u= -OutFile ../vulkan-sdk-${{env.VulkanSDKVersion}}.exe
        $installer = Start-Process -FilePath ../vulkan-sdk-${{env.VulkanSDKVersion}}.exe -Wait -PassThru -ArgumentList @("/S");
        $installer.WaitForExit();
    - name: CMake
      run: cmake . -G "Visual Studio 15 2017" -A x64 -DBUILD_SHARED_LIBS=ON
      env:
        VULKAN_SDK: ${{steps.env.outputs.VULKAN_SDK}}
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: MSBuild Compile
      run: MSBuild.exe ALL_BUILD.vcxproj -p:Configuration=Release
    - name: MSBuild Install
      run: MSBuild.exe INSTALL.vcxproj -p:Configuration=Release

  macos-build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      id: env
      run: |
        VULKAN_SDK=$GITHUB_WORKSPACE/../vulkansdk-macos-${{env.VulkanSDKVersion}}/macOS
        echo ::set-output name=VULKAN_SDK::$VULKAN_SDK
        echo "VK_LAYER_PATH=$VULKAN_SDK/etc/vulkan/explicit_layer.d" >> $GITHUB_ENV
        echo "VK_ICD_FILENAMES=$VULKAN_SDK/etc/vulkan/icd.d/MoltenVK_icd.json" >> $GITHUB_ENV
    - name: Cache
      id: cache
      uses: actions/cache@v1.1.2
      with:
        path: ${{steps.env.outputs.VULKAN_SDK}}
        key: VulkanSdk${{env.VulkanSDKVersion}}ExtractedMacos
    - name: Download & Extract Vulkan SDK
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        wget --no-cookies -O ../vulkansdk-macos-${{env.VulkanSDKVersion}}.dmg https://sdk.lunarg.com/sdk/download/${{env.VulkanSDKVersion}}/mac/vulkansdk-macos-${{env.VulkanSDKVersion}}.dmg?u=
        hdiutil attach ../vulkansdk-macos-${{env.VulkanSDKVersion}}.dmg
        cp -r /Volumes/vulkansdk-macos-${{env.VulkanSDKVersion}} $GITHUB_WORKSPACE/..
        hdiutil detach /Volumes/vulkansdk-macos-${{env.VulkanSDKVersion}}
    - name: CMake
      run: |
        export DYLD_LIBRARY_PATH="$VULKAN_SDK/lib:$DYLD_LIBRARY_PATH"
        export PATH="$VULKAN_SDK:$VULKAN_SDK/bin:$PATH"
        cmake -D CMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/../vsg-$GITHUB_SHA" .
      env:
        VULKAN_SDK: ${{steps.env.outputs.VULKAN_SDK}}

    - name: Make
      run: make -j 2
      
    - name: Install
      run: make install
