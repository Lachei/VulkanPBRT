#version 460

#include "bmfrGeneral.comp" //includes all layout declarations and common functions

//pixel offsets in 0 to 1, have to be converted with block edge length to retrieve total offset
vec2 pixelOffsets[] = { {.7, .85}, {.95, .5}, {.43, .76}, {.97, .03}, {.37, .58}, {.03, .36}, {.81, .46}, {0, .78}, {.36, -.08}, {-.06, 0}, {.95, .1}, {.85, .61}, {.06, .1}, {.43, .16}, {0, .5}, {.73, .38} };

int mirror(int x, int s){
    if(x < 0) return abs(x) - 1;
    if(x >= s) return 2 * s - x - 1;
    return x;
}

ivec2 mirror(ivec2 x, ivec2 s){
    return ivec2(mirror(x.x, s.x), mirror(x.y,s.y));
}

void main(){
    //--------------------------------------------------------------------------
    // Settings
    //--------------------------------------------------------------------------
    const uint ALPHA_SIZE = 8;

    //--------------------------------------------------------------------------
    // Local variables
    //--------------------------------------------------------------------------
    bool pixelAccept = false;
    float pixel_spp = 0;
    ivec2 imSize = ivec2(IMAGE_WIDTH, IMAGE_HEIGHT);
    ivec2 curAbsolutPos = ivec2(gl_GlobalInvocationID.xy) - ivec2(BLOCK_WIDTH, BLOCK_HEIGHT) * pixelOffsets[camParams.frameNumber % 16];
    ivec2 curImagePos = mirror(curAbsolutPos, imSize);
    float features[ALPHA_SIZE];

    //--------------------------------------------------------------------------
    // Loading all features and samples
    //--------------------------------------------------------------------------
    
}